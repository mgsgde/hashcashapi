
############### Slide 1 
- Ich werde euch im Folgenden den Klassiker Proof of Work vorstellen. 
- Dabei werde ich zuerst auf die ursprüngliche Verwendung des Proof of work Protokolls eingehen und anhand vom hashcash pow protokoll beschreiben wie man mit pow dos und spam mails verhindern kann. 
- Und danach werde ich proof of work im Kontext von blockchain protokollen vorstellen. Dabei werde ich anhand von bitcoin eine prozessor basierte proof of work gestaltung beschreiben und anhand von hashimoto ein speicherbasiertes proof of work protokoll.
- Zum Schluss werde ich dann die verschiedenn Anwendungen von Proof of Work hinsichtlich der Sinnhaftigkeit bewerten. 


############### Slide 2 
- Hashcash ist eines der ersten proof of work protokolle. 
- Was ist proof of work. 
	- Nutzer muss beweisen dass er Arbeit verrichtet hat bevor er zb auf einen Service zugriefen darf. 	
	- Diese arbeit wird bei proof of work vom prozessor verrichtet. 
- Ziel des Ganzen ist es DoS und Spam Mails zu verhindern. 
	- Das kalkühl dahinter ist, dass gute Nutzer von dereinmalig verrichteten Arbeit für die Nutzung des Serivce nicht beeinträchtigt werden, aber böswillige nutzer bei massenhaften Aufrufen des service dazu gezwungen sind so viel rechenarbeit zu verrichten als dass sie den anreiz verlieren den service massenhaft aufzurufen. 
- die arbeit muss schwer zu verrichten sein und leicht zu verifizieren. 
- Im fall von hashcash verwendet man dafür kryptografische hashfunktionen. Hashfunktionen bilden große eingabemengen auf eine kleinere zielmenge ab. Da hashfunktionen insbesondere nbenutzt werden um integrität von großen datensätzen mit signaturen usw zu sichern, wäre es äußert ungeschickt wenn es leicht wäre zu einem hashwert zwei eingabewerte zu finden. Solche kollisionen will man vermeiden und deswegen werden jene hashfunktion kollisitionsresistent gebau. Diese kollisionsresistenz impliziert wiederum dass die umekhrung jener funktionen praktisch undruchführbar sein. Sprich der einzige weg von einem bestimmten hashwert auf einen eingabewert zu schließen kann nur durch ausprobieren gemacht werden. Hashfunkionen werden daher auch einwegfunktionen genannt. 
- Der work im hashcahs proofo of work besteht nun darin jene undurchführbare umkehrung der einwegfunktionen durchzuführen. Sprich wir kennen einen hashwert und wollen nun einen eingabewerte finden. Das machen wir via try and error und der eingabe wert der zum gewünschten haschwert führt gilt als proof of work.  Der gesucht Eingabewert ist als benannt als nonce (number used onced) und der bekannte hashwert ist der final_output. Der ist in soweit bekannt als dass wir wissen dass er mit einer bestimmten anzahl an nullen beginnen soll und wir suchen ejtzt n passende nonce. 


############### Demo
- über weihnachtne hatte ich n bisschen langeweile und hab einfach ma so n beispielhafte pai gebaut die durch so n mechanismus gegen dos attacken auf applikations ebene gecshützt ist. 
- Der server bietet eine post methode an mit welcher clients willkürliche bilder anfordern können. bevor sie jedoch so n bild bekommen müssen sie n proof of work einreichen. 
- dafür müssen sie vorerst eine challenge anfordern. zusätzlich zu challenge wird die difficulty zugesandt. Die difficulty ist die anzahl an nullen die der hastwerte haben muss damit server den proof of work akzeptiert und das bild verschickt s
- nun wird im browser via try and error n wert namens nonce versucht zu finden, welcher verkettet mit der challenge als eingabewert für die hashfunktion n hashwert ergibt der mit der geforderten anzahl an nullen beginnt. die geforderte anzahl an nullen 
- sobald wird den hashwert haben können wir die nonce als beweis zum server senden und wid bekommen das bild zugesandt. der server merkt sich zusätzlich alle challenges, welche schon konsumiert wurden und zusätzlich fügt er allen challengen n ablaufdatum bei, damit nicht böswillige angreifer einfach ganz viele challegens ordern können und sie mit einem mal zum server schicken können  
- dennoch insgesamt aht sich das konzept zur abwehr von spam nie wirklich duchgesetzt. Mozilla bietet für thunderbird das addon pennypost an um spam zu verhindern. Hat sich jedoch nie wirklich durhcgesetzt



############### Slide 3 
